name: Continuous Integration

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev, test, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install types-requests "pandas-stubs<2.2.2.240807" types-PyYAML mypy-extensions
      - name: Lint with flake8
        run: flake8 src tests
      - name: Check formatting with black
        run: black --skip-string-normalization --line-length 88 src tests
      - name: Sort imports with isort
        run: isort --profile black src tests
      - name: Type check with mypy
        run: mypy --ignore-missing-imports src

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[dev]
          pip install pytest pytest-cov PyYAML fastapi requests fastapi[testing]
      - name: Create data directories
        run: |
          mkdir -p data/raw
          mkdir -p data/processed
          mkdir -p models
      - name: Run tests
        run: pytest tests --cov=src
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        
  monitoring-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pyyaml requests
      - name: Debug directory structure
        run: |
          ls -la
          ls -la monitoring || echo "monitoring directory not found"
          ls -la monitoring/prometheus || echo "prometheus directory not found"
          ls -la monitoring/grafana || echo "grafana directory not found"
      - name: Run monitoring tests
        run: python scripts/run_monitoring_tests.py
      - name: Verify Prometheus configuration
        run: |
          # Check if Prometheus config is valid
          if ! grep -q "ml-model-metrics" monitoring/prometheus/prometheus.yml; then
            echo "Prometheus configuration is missing ML model metrics job"
            exit 1
          fi
      - name: Verify Grafana dashboard configuration
        run: |
          # Check if Grafana dashboard is configured correctly
          if ! grep -q "model_prediction_count" monitoring/grafana/grafana-k8s.yaml; then
            echo "Grafana dashboard is missing model prediction metrics"
            exit 1
          fi
        
  integration:
    runs-on: ubuntu-latest
    needs: [test, monitoring-tests]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Create data directories
        run: |
          mkdir -p data/raw
          mkdir -p data/processed
          mkdir -p models
      - name: Run data processing
        run: python -m src.data.process --dataset iris
      - name: Run model training
        run: python -m src.models.run_training --dataset iris
      - name: Verify model file exists
        run: |
          if [ ! -f models/iris_classification_model.pkl ]; then
            echo "Model file was not created"
            exit 1
          fi 